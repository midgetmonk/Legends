stages:
  - build
  - deploy
  - upload

workflow:
  rules:
    - if: $CI_COMMIT_TAG

variables:
  ZIP_FILE_NAME: "legends-$CI_COMMIT_TAG.zip"
  RELEASE_DOWNLOAD: "https://gitlab.com/$CI_PROJECT_PATH/-/releases/$CI_COMMIT_TAG/downloads/$ZIP_FILE_NAME"

build:
  image: node:latest
  stage: build
  script:
    # Extract version from system.json
    - PACKAGE_VERSION=$(node -p "require('./system.json').version")
    - PACKAGE_DOWNLOAD=$(node -p "require('./system.json').download")

    # Validate that the tag being released matches the package version.
    - |
      if [[ ! $CI_COMMIT_TAG == v$PACKAGE_VERSION ]]; then
        echo "The system.json version does not match tag name."
        echo "system.json: $PACKAGE_VERSION"
        echo "tag name: $CI_COMMIT_TAG"
        echo "Please fix this and push the tag again."
        exit 1
      fi

    # Validate that the package download url matches the release asset that will be created.
    - |
      if [[ ! $RELEASE_DOWNLOAD == $PACKAGE_DOWNLOAD ]]; then
        echo "The system.json download url does not match the created release asset url."
        echo "system.json: $PACKAGE_DOWNLOAD"
        echo "release asset url: $RELEASE_DOWNLOAD"
        echo "Please fix this and push the tag again."
        exit 1
      fi

    # install the zip package
    - apt-get update
    - apt-get install zip

    # zip whitelist of files to distribute
    - zip $ZIP_FILE_NAME -r images lang module styles/*.css styles/fonts styles/images templates legends.js LICENSE README.md system.json template.json
  artifacts:
    # include the system json and created zip file as artifacts of the job
    paths:
      - $ZIP_FILE_NAME
      - system.json
    expire_in: never

# Attach build artifacts as release assets
# https://docs.gitlab.com/ee/ci/yaml/index.html#complete-example-for-release
release:
  stage: deploy
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script:
    - echo 'running release_job'

  release:
    tag_name: '$CI_COMMIT_TAG'
    ref: '$CI_COMMIT_TAG'
    description: '**Installation:** To manually install this release, please use the following manifest URL: https://gitlab.com/$CI_PROJECT_PATH/-/releases/$CI_COMMIT_TAG/downloads/system.json'
    assets:
      links:
        # links the release to the system manifest from this CI workflow
        - name: 'system.json'
          url: https://gitlab.com/$CI_PROJECT_PATH/-/jobs/artifacts/$CI_COMMIT_TAG/raw/system.json?job=build
          filepath: '/system.json'
        # links the release to the zip file from this CI workflow
        - name: '$ZIP_FILE_NAME'
          url: https://gitlab.com/$CI_PROJECT_PATH/-/jobs/artifacts/$CI_COMMIT_TAG/raw/$ZIP_FILE_NAME?job=build
          filepath: '/$ZIP_FILE_NAME'

upload:
  stage: upload
  image: curlimages/curl:latest
  script: |
    curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file system.json "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/legends/latest/system.json"
